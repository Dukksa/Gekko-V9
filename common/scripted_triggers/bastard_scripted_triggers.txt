
# usage:
#	area_has_total_development_of_type = {
#		type = <tax/production/manpower>
#		1 = <province id>	# all provinces should be in the same area
#		2 = <province id>
#		3 = <province id>
#		4 = <province id>
#		5 = <province id>
#		total = <int>		# amount of development of <type> that the sum of all provinces' development of <type> should at least be
#	}
area_has_total_development_of_type = {
	$1$ = {
		custom_trigger_tooltip = {
			tooltip = area_has_total_development_of_type_tt_$type$
			OR = {
				always = yes
				development = $total$ # for the tooltip
			}
			variable_arithmetic_trigger = {
				export_to_variable = {
					which = area_var
					value = base_$type$
					who = $1$
				}
				[[2]
					export_to_variable = {
						which = province_$2$
						value = base_$type$
						who = $2$
					}
					change_variable = { which = area_var which = province_$2$ }
				]
				[[3]
					export_to_variable = {
						which = province_$3$
						value = base_$type$
						who = $3$
					}
					change_variable = { which = area_var which = province_$3$ }
				]
				[[4]
					export_to_variable = {
						which = province_$4$
						value = base_$type$
						who = $4$
					}
					change_variable = { which = area_var which = province_$4$ }
				]
				[[5]
					export_to_variable = {
						which = province_$5$
						value = base_$type$
						who = $5$
					}
					change_variable = { which = area_var which = province_$5$ }
				]
				check_variable = { which = area_var value = $total$ }
			}
		}
	}
}

X_has_latest_building_trigger = {
	[[trade]
		if = {
			limit = { $builder$ = { dip_tech = 22 } }
			has_building = stock_exchange
		}
		else_if = {
			limit = { $builder$ = { dip_tech = 17 } }
			has_building = trade_depot
		}
		else = {
			has_building = marketplace
		}
	]
	[[government]
		if = {
			limit = { $builder$ = { adm_tech = 22 } }
			has_building = town_hall
		}
		else = {
			has_building = courthouse
		}
	]
	[[production]
		if = {
			limit = { $builder$ = { adm_tech = 24 } }
			has_building = counting_house
		}
		else = {
			has_building = workshop
		}
	]
	[[tax]
		if = {
			limit = { $builder$ = { adm_tech = 19 } }
			has_building = cathedral
		}
		else = {
			has_building = temple
		}
	]
	[[manpower]
		if = {
			limit = { $builder$ = { mil_tech = 16 } }
			has_building = training_fields
		}
		else = {
			has_building = barracks
		}
	]
	[[sailors]
		if = {
			limit = { $builder$ = { dip_tech = 19 } }
			has_building = drydock
		}
		else = {
			has_building = dock
		}
	]
	[[army_forcelimit]
		if = {
			limit = { $builder$ = { mil_tech = 18 } }
			has_building = conscription_center
		}
		else = {
			has_building = regimental_camp
		}
	]
	[[navy_forcelimit]
		has_building = shipyard
	]
	[[coastal]
		if = {
			limit = { $builder$ = { dip_tech = 12 } }
			has_building = naval_battery
		}
		else = {
			has_building = coastal_defence
		}
	]
	[[fort]
		if = {
			limit = { $builder$ = { mil_tech = 24 } }
			has_building = fort_18th
		}
		else_if = {
			limit = { $builder$ = { mil_tech = 19 } }
			has_building = fort_17th
		}
		else_if = {
			limit = { $builder$ = { mil_tech = 14 } }
			has_building = fort_16th
		}
		else = {
			has_building = fort_15th
		}
	]
}

MAM_upgrade_cot_and_trade_building = {
	custom_trigger_tooltip = {
		tooltip = MAM_upgrade_cot_to_level_2_and_build_trade_building
		OR = {
			NOT = { province_has_center_of_trade_of_level = 1 } 
			AND = {
				country_or_non_sovereign_subject_holds = ROOT
				if = {
					limit = {
						has_dlc = "Dharma"
					}
					province_has_center_of_trade_of_level = 2
				}
				has_trade_building_trigger = yes
			}
		}
	}
}

has_state_edict_enabled = {
	OR = {
		has_state_edict = edict_advancement_effort
		has_state_edict = edict_centralization_effort
		has_state_edict = edict_defensive_edict
		has_state_edict = edict_of_governance
		has_state_edict = edict_encourage_development
		has_state_edict = edict_feudal_de_jure_law
		has_state_edict = french_infrastructure_network
		has_state_edict = edict_promote_military_recruitment
		has_state_edict = edict_protect_trade
		has_state_edict = protect_trade_empowered
		has_state_edict = edict_religion_enforced
		has_state_edict = edict_religious_unity
		has_state_edict = chinese_industrialization
		has_state_edict = feudal_taxes_state_edict
		has_state_edict = religious_tolerance_state_edict
		has_state_edict = state_integration_state_edict
		has_state_edict = urbanization_state_edict
	}
}